name: Build ZIP file
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 2'
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Get version
        run: |
          OSVER=`cat version.txt`
          echo "OSVER=$OSVER" >> $GITHUB_ENV
          echo The current version is $OSVER!

      - name: ZIP files for stable release
        run: |
          cd $GITHUB_WORKSPACE/EUR/
          zip "$GITHUB_WORKSPACE/3DFox_OS_EUR_$OSVER.zip" ./ -r
          cd $GITHUB_WORKSPACE/USA/
          zip "$GITHUB_WORKSPACE/3DFox_OS_USA_$OSVER.zip" ./ -r
          cd $GITHUB_WORKSPACE
        if: (github.ref_name == 'main' && github.event_name == 'push')

      - name: Upload stable ZIP file as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: 3DFox OS
          path: ./3DFox_OS_*_${{ env.OSVER }}.zip
        if: (github.ref_name == 'main' && github.event_name == 'push')
        
      - name: ZIP files for nightly release
        run: |
          cd $GITHUB_WORKSPACE/EUR/
          zip "$GITHUB_WORKSPACE/3DFox_OS_EUR_nightly.zip" ./ -r
          cd $GITHUB_WORKSPACE/USA/
          zip "$GITHUB_WORKSPACE/3DFox_OS_USA_nightly.zip" ./ -r
          cd $GITHUB_WORKSPACE
        if: |
          ${{ github.ref_name == 'dev' }} ||
          ${{ github.event_name == 'pull_request' }} ||
          ${{ github.event_name == 'schedule' }}

      - name: Upload nightly ZIP file as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: 3DFox OS
          path: ./3DFox_OS_*_nightly.zip
        if: |
          ${{ github.ref_name == 'dev' }} ||
          ${{ github.event_name == 'pull_request' }} ||
          ${{ github.event_name == 'schedule' }}

      - name: Make short version tag
        run: |
          SHORT_OSVER="$OSVER"
          SHORT_OSVER=`sed 's/[v]*//' <<< "$SHORT_OSVER"`
          echo "SHORT_OSVER=$SHORT_OSVER" >> $GITHUB_ENV
        if: (github.ref_name == 'main' && github.event_name == 'push')
    
      - name: Get JSON
        run: |
          curl --request GET \
          --url "http://api.github.com/repos/EggFox/3DFox-OS/releases/tags/${{ env.OSVER }}" \
          --header "Authorization: Bearer ${{ secrets.api_token }}" \
          --output api.json
        if: ${{ github.ref_name == 'main' }}

      - name: Set variable for 'draft' release
        run: |
          content=$(cat api.json) 
          isdraft=$( jq -r  'draft' <<< "${content}" ) 
          echo ${isdraft}
          echo "ISDRAFT=${isdraft}" >> $GITHUB_ENV

      - name: Tell draft release
        run: echo "Draft is ${{ env.ISDRAFT }}!"
        if: ${{ github.ref_name == 'main' }}
          
      - name: Remove tag
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git push --delete origin $OSVER
        if: ${{ env.ISDRAFT == 'true' }}
        
      - name: Create a release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "3DFox_OS_EUR_${{ env.OSVER }}.zip,3DFox_OS_USA_${{ env.OSVER }}.zip"
          generateReleaseNotes: true
          name: "!!!3DFox OS ${{ env.SHORT_OSVER }}!!!"
          tag: "${{ env.OSVER }}"
          draft: true
          makeLatest: true
          skipIfReleaseExists: true
          allowUpdates: true
          updateOnlyUnreleased: true
        if: (github.ref_name == 'main' && github.event_name == 'push')
